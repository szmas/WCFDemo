<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.serviceModel>

    <!--配置服务和终结点开始-->
    <services>
      <service>
        <host>
          <baseAddresses>
            <!-- 每种传输协议的baseAddress，用于跟使用同样传输协议Endpoint定义的相对地址组成完整的地址，
                 每种传输协议只能定义一个baseAddress。HTTP的baseAddress同时是service对外发布服务说明页面的URL -->
            <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFLibrary/Service/"/>
          </baseAddresses>
        </host>
        <endpoint bindingConfiguration="mynetTcpBinding" binding="netTcpBinding" address="" contract=""></endpoint>
      </service>
    </services>
    <!--配置服务和终结点结束-->

    <!--配置客户端和终结点开始-->
    <client>
      <endpoint bindingConfiguration="mynetTcpBinding" binding="netTcpBinding" address="" contract=""></endpoint>
    </client>
    <!--配置客户端和终结点结束-->

    <!--配置绑定开始-->
    <bindings>
      <netTcpBinding>
        <binding name="mynetTcpBinding">
        </binding>
      </netTcpBinding>
    </bindings>
    <!--配置绑定结束-->

    <!--配置行为开始-->
    <behaviors>
      <serviceBehaviors>
        <behavior>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--配置行为结束-->

  </system.serviceModel>
</configuration>

<!--
    
    Service配置节[必须有]：配置服务、接口和终结点。每个Service都会有以下两个属性。name：名称空间.类名[服务的具体实现类]。behaviorConfiguration：一个在behaviors节点中找到的名称。

　　Binding配置节[可有可无]：配置绑定，如http，tcp等。

　　Behavior配置节[可有可无]：配置行为，如认证等。
  
  -->


<!--

客户端的wcf配置
    
    endpoint 终结点  name，bindingConfiguration 可以去掉 ABC必须有
    bindings 绑定行为
    
    
    <system.serviceModel>
        <bindings>
            <basicHttpBinding>
                <binding name="BasicHttpBinding_IService1" />
            </basicHttpBinding>
        </bindings>
        <client>
            <endpoint address="http://localhost:55791/Service1.svc" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_IService1" contract="WcfService.IService1"
                name="BasicHttpBinding_IService1" />
        </client>
    </system.serviceModel>



服务端的wcf配置

 <system.serviceModel>
    <services>
      <service name="Service.ReqReply" behaviorConfiguration="ReqReplyBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://127.0.0.1:1234/ReqReply/"/>
          </baseAddresses>
        </host>

        address为空，就默认为baseAddresses的地址
        终结点要配置行为 behaviorConfiguration
        <endpoint address="" binding="wsHttpBinding" contract="Service.IReqReply" 
                  bindingConfiguration="binding1" 
                  behaviorConfiguration="behavior1">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
    </services>

    <bindings>
      <wsHttpBinding>
        <binding name="binding1">
          <security mode="Message">
            <message clientCredentialType="Windows"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="ReqReplyBehavior">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="True"/>
        </behavior>
      </serviceBehaviors>

      <endpointBehaviors>
        <behavior name="behavior1">
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>
  
  -->